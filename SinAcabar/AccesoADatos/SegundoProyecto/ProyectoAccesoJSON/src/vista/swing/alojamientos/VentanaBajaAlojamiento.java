/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.swing.alojamientos;

import controlador.DTO.AlojamientoDTO;
import controlador.datos.DBBConexion;
import vista.swing.comun.VentanaPrincipal;
import aplicacion.facade.Facade;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JOptionPane;
import vista.swing.comun.SingletonVentanas;

/**
 * Ventana para dar de Baja un Alojamiento ya existente en la BDD.
 * @author Mario Codes Sánchez
 * @since 30/11/2016
 */
public class VentanaBajaAlojamiento extends javax.swing.JFrame implements WindowListener {
    private final VentanaPrincipal VP = SingletonVentanas.getVentanaPrincipalObtencionSingleton();
    
    /**
     * Creates new form VentanaBajaAlojamiento
     */
    public VentanaBajaAlojamiento() {
        initComponents();
        
        this.setTitle("Dar Alojamiento de Baja");
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        addWindowListener(this);
        
        VP.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelID = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        inputID = new javax.swing.JTextField();
        checkBoxBooleanConfirmacion = new javax.swing.JCheckBox();
        jLabelConfirmacion = new javax.swing.JLabel();
        botonBorrar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jLabelTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelID.setText("# ID: ");

        jLabelNombre.setText("Nombre: ");

        inputNombre.setToolTipText("Nombre que ostenta la empresa");

        inputID.setToolTipText("ID identificativo del alojamiento en la BDD");

        checkBoxBooleanConfirmacion.setText("Sí");
        checkBoxBooleanConfirmacion.setToolTipText("¿De verdad?");

        jLabelConfirmacion.setText("¿Estás Seguro/a?");

        botonBorrar.setText("Borrar");
        botonBorrar.setMaximumSize(new java.awt.Dimension(75, 23));
        botonBorrar.setMinimumSize(new java.awt.Dimension(75, 23));
        botonBorrar.setPreferredSize(new java.awt.Dimension(90, 23));
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabelTitulo.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabelTitulo.setText("Dar Alojamiento de Baja");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelConfirmacion)
                                .addGap(27, 27, 27)
                                .addComponent(checkBoxBooleanConfirmacion)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelNombre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelID)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre)
                    .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxBooleanConfirmacion)
                    .addComponent(jLabelConfirmacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * Check de que los campos de inputs esten rellenados y no vacios.
     * @return True si estan los 2 llenos.
     */
    private boolean checkInputLleno() {
        return (this.inputID.getText().length() != 0 && this.inputNombre.getText().length() != 0);
    }
    
    /**
     * Reseteo de los campos a su estado inicial.
     */
    private void reseteoCampos() {
        this.inputID.setText(null);
        this.inputNombre.setText(null);
        this.checkBoxBooleanConfirmacion.setSelected(false);
    }
    
    /**
     * Borrado de un Alojamiento en la BDD.
     * @param id ID del alojamiento a borrar.
     * @param nombre Nombre del alojamiento a borrar.
     */
    private void operacionBorrarDesdeBDD(int id, String nombre) {
        Facade fachada = new Facade();
        
        AlojamientoDTO alDTOTmp = fachada.buscarAlojamientoIdEspecificoBDD(id);
        
        if(alDTOTmp != null) {
            if(alDTOTmp.getNombre().matches(nombre)) {
                int res = fachada.bajaAlojamientoBDD(alDTOTmp); //Int con el resultado de la operacion.
                JOptionPane.showMessageDialog(this, res +" fila modificada.");
                reseteoCampos();
            }else {
                JOptionPane.showMessageDialog(this, "El nombre del Alojamiento no Coincide.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ningun Alojamiento con esa ID.");
        }
    }
    
    /**
     * Borrado de un Alojamiento en JSON. Se elimina del HashMap interno.
     * @param id ID del alojamiento a borrar.
     * @param nombre Nombre del Alojamiento a borrar.
     */
    private void operacionBorrarDesdeJSONInterno(int id, String nombre) {
        Facade fachada = new Facade();
        
        AlojamientoDTO alDTOTmp = fachada.buscarAlojamientoIDespecificoJSON(id);

        if(alDTOTmp != null) {
            if(alDTOTmp.getNombre().matches(nombre)) {
                fachada.bajaAlojamientoJSON(alDTOTmp);
                JOptionPane.showMessageDialog(this, "Alojamiento dado de Baja.");
                reseteoCampos();
            } else {
                JOptionPane.showMessageDialog(this, "El nombre del Alojamiento no coincide con los datos de esa ID.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ningun Alojamiento con esa ID");
        }
    }
    
    /**
     * Operacion de Borrar en si misma.
     */
    private void borrarAlojamiento() {        
        try {
            if(checkInputLleno()) { //Si no hay campos vacios.
                if(this.checkBoxBooleanConfirmacion.isSelected()) {
                    int id = Integer.parseInt(this.inputID.getText());
                    String nombre = this.inputNombre.getText();
                
                    if(DBBConexion.checkConexionDBBExiste()) {
                        operacionBorrarDesdeBDD(id, nombre);
                    } else {
                        operacionBorrarDesdeJSONInterno(id, nombre);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Por Favor, marque la casilla como que está \nconforme con borrar esta entrada.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERROR. Ninguno de los campos puede estar vacío.");
            }
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ERROR. La ID contiene caracteres no validos. \nCompruebe que la ID sea un # entero");
        }
    }
    
    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        borrarAlojamiento();
    }//GEN-LAST:event_botonBorrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JCheckBox checkBoxBooleanConfirmacion;
    private javax.swing.JTextField inputID;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JLabel jLabelConfirmacion;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelTitulo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {}

    @Override
    public void windowClosing(WindowEvent e) {
        VP.setVisible(true);
    }

    @Override
    public void windowClosed(WindowEvent e) {
        VP.setVisible(true);
    }

    @Override
    public void windowIconified(WindowEvent e) {}

    @Override
    public void windowDeiconified(WindowEvent e) {}

    @Override
    public void windowActivated(WindowEvent e) {}

    @Override
    public void windowDeactivated(WindowEvent e) {}
}
